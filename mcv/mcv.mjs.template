import m from 'mithril'

import { createHiddenSVGForLaterUse } from '../src/views/utils.mjs'

import { Bsw } from './mocks/browserServiceWorker'

{{ @foreach(it.entries) => aKey, anEntry }}
import {{anEntry.entryName }} from '~/{{ anEntry.path }}'
{{/foreach}}

var NavMenu = {
  view: function(vnode) {
    return m("nav.nav-menu", [
      m(m.route.Link, { href: "/home", style: "margin-left: 20px;"}, "MCV")
{{ @foreach(it.entries) => aKey, anEntry }}
      m(
        m.route.Link,
        {
          href: "/mcv/{{ anEntry.route}}",
          style: "margin-left: 20px;"
        },
        "{{ anEntry.viewDir | capitalize }}/{{ anEntry.viewObj | capitalize }}"
      ),
{{/foreach}}
      m(m.route.Link, { href: "/home", style: "margin-left: 20px;"}, "MCV")
    ])
  }
}

var Layout = {
  oninit: function(vnode) {

    // We explicitly *stop* the Browser's Mock Serive Workers before each
    // example. This allows Mock Service Worker based examples to
    // explicitly turn the MSW back on (only when needed).

    Bsw.stop()
  },
  view: function(vnode) {
    return m("main.layout", [
      createHiddenSVGForLaterUse(),
      m(NavMenu),
      m("hr"),
      m("component", vnode.children),
      m("hr"),
      m(NavMenu),
    ])
  }
}

Bsw.setup()

var root = document.body
m.route(root, '/home', {
{{ @foreach(it.entries) => aKey, anEntry }}
  '/mcv/{{anEntry.route}}' : {
    view: function() {
      return m(Layout, m({{ anEntry.entryName}}))
    }
  },
{{/foreach}}
  '/home' : {
  	view: function() {
  		return m(Layout)
  	}
  }
})
